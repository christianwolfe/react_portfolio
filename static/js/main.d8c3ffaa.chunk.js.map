{"version":3,"sources":["logo.svg","components/Home.js","components/Nav.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Home","props","class","src","Nav","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"iJAAAA,EAAOC,QAAU,IAA0B,kC,oGCuB5BC,MArBf,SAAcC,GACV,OACA,yBAAKC,MAAM,aACX,yBAAKA,MAAM,8BACP,wCACA,6BACA,6BACI,yBAAKC,IAAI,qEACLD,MAAM,sBACV,gHAEA,qYCgBGE,MA3Bf,SAAaH,GAET,OACI,yBAAKC,MAAM,iDACX,yBAAKA,MAAM,aACP,uBAAGA,MAAM,eAAeG,KAAK,KAA7B,mBACA,4BAAQH,MAAM,iBAAiBI,KAAK,SAASC,cAAY,WAAWC,cAAY,aAC5EC,gBAAc,YAAYC,gBAAc,QAAQC,aAAW,qBAC3D,0BAAMT,MAAM,yBAEhB,yBAAKA,MAAM,+CAA+CU,GAAG,aACzD,wBAAIV,MAAM,cACN,wBAAIA,MAAM,mBACN,uBAAGA,MAAM,WAAWG,KAAK,eAAzB,QAA4C,0BAAMH,MAAM,WAAZ,eAEhD,wBAAIA,MAAM,YACN,uBAAGA,MAAM,WAAWG,KAAK,oBAAzB,cAEJ,wBAAIH,MAAM,YACN,uBAAGA,MAAM,WAAWG,KAAK,kBAAzB,iB,MCDTQ,MATf,WACE,OACF,6BACI,kBAAC,EAAD,MACF,kBAAC,EAAD,QCHkBC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.d8c3ffaa.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from \"react\"\n\nfunction Home(props) {\n    return (\n    <div class=\"container\">\n    <div class=\"col-sm-9 bg-white mt-4 p-4\">\n        <h1>About Me</h1>\n        <hr/>\n        <div>\n            <img src=\"https://ca.slack-edge.com/T013N8MNY3H-U0143RF2ECD-93cd93ec691e-512\"\n                class=\"profilePhoto mr-4\"/>\n            <p> Christian Wolfe is currently a full-time student at the UCF MERN Stack BootCamp.\n            </p>\n            <p>From St. Petersburg, Florida, Christian has spent the past 5 years in the real estate title insurance\n                industry. After working his way up to being the agent-in-charge and shareholder an Agency in\n                Clearwater, Florida,\n                Christian took the leap to finally begin his career in Software and Web\n                Development by enrolling full-time in the UCF MERN Stack BootCamp.</p>\n        </div>\n    </div>\n</div>\n)};\n\nexport default Home;","import React from \"react\"\n\nfunction Nav(props) {\n\n    return (\n        <nav class=\"navbar navbar-expand-md navbar-light bg-light\">\n        <div class=\"container\">\n            <a class=\"navbar-brand\" href=\"#\">Christian Wolfe</a>\n            <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\"\n                aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                <span class=\"navbar-toggler-icon\"></span>\n            </button>\n            <div class=\"collapse navbar-collapse justify-content-end\" id=\"navbarNav\">\n                <ul class=\"navbar-nav\">\n                    <li class=\"nav-item active\">\n                        <a class=\"nav-link\" href=\"/index.html\">Home <span class=\"sr-only\">(current)</span></a>\n                    </li>\n                    <li class=\"nav-item\">\n                        <a class=\"nav-link\" href=\"./portfolio.html\">Portfilio</a>\n                    </li>\n                    <li class=\"nav-item\">\n                        <a class=\"nav-link\" href=\"./contact.html\">Contact</a>\n                    </li>\n                </ul>\n            </div>\n        </div>\n    </nav>\n)}\n\nexport default Nav;","import React from 'react';\nimport logo from './logo.svg';\nimport Home from \"./components/Home\";\nimport Contact from \"./components/Contact\";\nimport Nav from \"./components/Nav\";\nimport Projects from \"./components/Projects\";\n\nimport './App.css';\n\n\n\nfunction App() {\n  return (\n<div>\n    <Nav></Nav>\n  <Home></Home>\n  </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}